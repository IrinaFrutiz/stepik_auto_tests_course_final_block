{"name": "Check guest_can_add_product_to_basket", "status": "skipped", "statusDetails": {"message": "XFAIL\n\nAssertionError: Coders at Work book has been added to your basket. is not Coders at Work has been added to your basket.", "trace": "browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ba0da827864ef9e800ecb2951dc06ab6\")>\nlink = 'http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer7'\n\n    @allure.title(\"Check guest_can_add_product_to_basket\")\n    @pytest.mark.need_review\n    @pytest.mark.parametrize('link', [\"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer0\",\n                                      \"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer1\",\n                                      \"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer2\",\n                                      \"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer3\",\n                                      \"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer4\",\n                                      \"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer5\",\n                                      \"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer6\",\n                                      pytest.param(\n                                        \"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer7\",\n                                        marks=pytest.mark.xfail),\n                                      \"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer8\",\n                                      \"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer9\"\n                                      ])\n    def test_guest_can_add_product_to_basket(browser, link):\n        page = ProductPage(browser, link)\n        page.open()\n        page.should_click_to_button_add_to_basket()\n        page.solve_quiz_and_get_code()\n>       page.check_message_book_added_to_basket()\n\ntest_product_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.product_page.ProductPage object at 0x000001F41BE78610>\n\n    @allure.step('check a message that the book added to the basket')\n    def check_message_book_added_to_basket(self):\n        languages = {\n            \"ar\": \" has been added to your basket.\",\n            \"ca\": \" s'ha afegit a la seva cistella.\",\n            \"cs\": \" byla přidána do vašeho košíku.\",\n            \"da\": \" er lagt i din indkøbskurv.\",\n            \"de\": \" wurde Ihrem Warenkorb hinzugefügt.\",\n            \"en-gb\": \" has been added to your basket.\",\n            \"en\": \" has been added to your basket.\",\n            \"el\": \" has been added to your basket.\",\n            \"es\": \" ha sido añadido al carrito.\",\n            \"fi\": \" lisätty koriisi.\",\n            \"fr\": \" a été ajouté à votre panier.\",\n            \"it\": \" byl přidán do vašeho košíku.\",\n            \"ko\": \"이(가) 장바구니에 추가되었습니다.\",\n            \"nl\": \" is toegevoegd aan je winkelmand.\",\n            \"pl\": \" został dodany do koszyka.\",\n            \"pt\": \" foi adicionado ao seu carrinho.\",\n            \"pt-br\": \" foi adicionado à sua cesta.\",\n            \"ro\": \" a fost adaugat in cos.\",\n            \"ru\": \" был добавлен в вашу корзину.\",\n            \"sk\": \" bol pridaný do košíka.\",\n            \"uk\": \" було додано до Вашого кошику.\",\n            \"zh-cn\": \" has been added to your basket.\",\n        }\n        language = self.browser.execute_script(\n            \"return window.navigator.userLanguage || window.navigator.language\")\n        messages = self.element_is_visible(self.locators.PRODUCT_ADDED_TO_BASKET)\n        book_name = self.browser.find_element(*ProductPageLocators.PRODUCT_NAME)\n        expected_message = f\"{book_name.text}{languages[language]}\"\n>       assert expected_message in messages.text, \\\n            f'{messages.text} is not {expected_message}'\nE       AssertionError: Coders at Work book has been added to your basket. is not Coders at Work has been added to your basket.\n\npages\\product_page.py:74: AssertionError"}, "steps": [{"name": "open the URL", "status": "passed", "start": 1697806529992, "stop": 1697806531528}, {"name": "add a book to a basket", "status": "passed", "start": 1697806531528, "stop": 1697806531649}, {"name": "the quiz", "status": "passed", "steps": [{"name": "solving the quiz", "status": "passed", "start": 1697806531677, "stop": 1697806531723}], "start": 1697806531649, "stop": 1697806532574}, {"name": "check a message that the book added to the basket", "status": "failed", "statusDetails": {"message": "AssertionError: Coders at Work book has been added to your basket. is not Coders at Work has been added to your basket.\n", "trace": "  File \"C:\\Users\\irina\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"D:\\Ira\\Python\\stepik_auto_tests_course_final_block\\pages\\product_page.py\", line 74, in check_message_book_added_to_basket\n    assert expected_message in messages.text, \\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}, "start": 1697806532575, "stop": 1697806532662}], "attachments": [{"name": "stdout", "source": "c15dcd87-e93d-408b-8a45-d0c1009155d0-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "link", "value": "'http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer7'"}], "start": 1697806529992, "stop": 1697806532684, "uuid": "7c0c0823-c05c-44be-9134-0ed4afd0fe6f", "historyId": "b667e8f3bc333e14e10f446a6aecbe35", "testCaseId": "d1f983c76b7e8a55c7c09e84c59edee2", "fullName": "test_product_page#test_guest_can_add_product_to_basket", "labels": [{"name": "tag", "value": "need_review"}, {"name": "tag", "value": "@pytest.mark.xfail"}, {"name": "suite", "value": "test_product_page"}, {"name": "host", "value": "DESKTOP-SA07AEL"}, {"name": "thread", "value": "17200-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_product_page"}]}