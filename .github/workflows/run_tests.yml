name: Automated tests

on:
  workflow_dispatch:
    inputs:
      deployment_target:
        description: Choose target
        required: true
        default: en_test
        type: choice
        options:
          - en_test
          - ar_test
          - ca_test
          - cs_test
          - da_test
          - de_test
          - en-gb_test_and_Edge
          - en-US_test_and_Firefox
          - el_test
          - es_test
          - fi_test
          - fr_test
          - it_test
          - ko_test
          - nl_test
          - pl_test
          - pt_test
          - pt-br_test
          - ro_test
          - ru_test
          - sk_test
          - uk_test
          - zh-cn_test

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  download-history:
    runs-on: ubuntu-latest
    name: Download history
    steps:
      - name: setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - run: >
          ARTIFACT_ID=$(curl -L 
          -H "Accept: application/vnd.github+json" 
          -H "X-GitHub-Api-Version: 2022-11-28" 
          "https://api.github.com/repos/IrinaFrutiz/stepik_auto_tests_course_final_block/actions/artifacts?name=allure-results" 
          | python -c "import sys, json; print(json.load(sys.stdin)['artifacts'][0]['id']);") 
          &&
          curl -L 
          -H "Accept: application/vnd.github+json" 
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" 
          -H "X-GitHub-Api-Version: 2022-11-28" 
          https://api.github.com/repos/IrinaFrutiz/stepik_auto_tests_course_final_block/actions/artifacts/$ARTIFACT_ID/zip 
          -o artifacts.zip &&
          REPORT_ID=$(curl -L
          -H "Accept: application/vnd.github+json"
          -H "X-GitHub-Api-Version: 2022-11-28"
          "https://api.github.com/repos/IrinaFrutiz/stepik_auto_tests_course_final_block/actions/artifacts?name=github-pages"
          | python -c "import sys, json; print(json.load(sys.stdin)['artifacts'][0]['id']);")
          &&
          curl -L
          -H "Accept: application/vnd.github+json"
          -H "Authorization: Bearer ${{ secrets.TOKEN }}"
          -H "X-GitHub-Api-Version: 2022-11-28"
          https://api.github.com/repos/IrinaFrutiz/stepik_auto_tests_course_final_block/actions/artifacts/$REPORT_ID/zip
          -o pages.zip
      - run: mkdir allure-results && unzip artifacts.zip -d allure-results
      - run: mkdir old_pages pages_history && unzip pages.zip -d old_pages && tar -xvf old_pages/artifact.tar -C pages_history
      - run: cp pages_history/history/* allure-results && cp -r pages_history/history allure-results
      - name: Store allure history
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path:
            allure-results
          retention-days: 7
  test:
    needs: download-history
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install Chrome
        run: sudo apt-get install google-chrome-stable
      - name: Install Firefox
        run: |
          sudo apt-get update
          sudo apt-get install firefox
      - name: Install Edge
        run: |
          curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
          sudo mv microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpg
          sudo sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/edge stable main" > /etc/apt/sources.list.d/microsoft-edge-dev.list'
          sudo apt-get update
          sudo apt-get install microsoft-edge-dev
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3
      - name: en_test
        if: "github.event.inputs.deployment_target == 'en_test'"
        run: pytest --alluredir="allure-results"
        continue-on-error: true
      - name: ar_test
        if: "github.event.inputs.deployment_target == 'ar_test'"
        run: pytest --language=ar --alluredir="allure-results"
        continue-on-error: true
      - name: ca_test
        if: "github.event.inputs.deployment_target == 'ca_test'"
        run: pytest --language=ca --alluredir="allure-results"
        continue-on-error: true
      - name: cs_test
        if: "github.event.inputs.deployment_target == 'cs_test'"
        run: pytest --language=cs --alluredir="allure-results"
        continue-on-error: true
      - name: da_test
        if: "github.event.inputs.deployment_target == 'da_test'"
        run: pytest --language=da --alluredir="allure-results"
        continue-on-error: true
      - name: de_test
        if: "github.event.inputs.deployment_target == 'de_test'"
        run: pytest --language=de --alluredir="allure-results"
        continue-on-error: true
      - name: en-gb_test and Edge
        if: "github.event.inputs.deployment_target == 'en-gb_test_and_Edge'"
        run: pytest --language=en-gb --browser_name=edge --alluredir="allure-results"
        continue-on-error: true
      - name: en-US_test and Firefox
        if: "github.event.inputs.deployment_target == 'en-US_test_and_Firefox'"
        run: pytest --language=en-US --browser_name=firefox --alluredir="allure-results"
        continue-on-error: true
      - name: el_test
        if: "github.event.inputs.deployment_target == 'el_test'"
        run: pytest --language=el --alluredir="allure-results"
        continue-on-error: true
      - name: es_test
        if: "github.event.inputs.deployment_target == 'es_test'"
        run: pytest --language=es --alluredir="allure-results"
        continue-on-error: true
      - name: fi_test
        if: "github.event.inputs.deployment_target == 'fi_test'"
        run: pytest --language=fi --alluredir="allure-results"
        continue-on-error: true
      - name: fr_test
        if: "github.event.inputs.deployment_target == 'fr_test'"
        run: pytest --language=fr --alluredir="allure-results"
        continue-on-error: true
      - name: it_test
        if: "github.event.inputs.deployment_target == 'it_test'"
        run: pytest --language=it --alluredir="allure-results"
        continue-on-error: true
      - name: ko_test
        if: "github.event.inputs.deployment_target == 'ko_test'"
        run: pytest --language=ko --alluredir="allure-results"
        continue-on-error: true
      - name: nl_test
        if: "github.event.inputs.deployment_target == 'nl_test'"
        run: pytest --language=nl --alluredir="allure-results"
        continue-on-error: true
      - name: pl_test
        if: "github.event.inputs.deployment_target == 'pl_test'"
        run: pytest --language=pl --alluredir="allure-results"
        continue-on-error: true
      - name: pt_test
        if: "github.event.inputs.deployment_target == 'pt_test'"
        run: pytest --language=pt --alluredir="allure-results"
        continue-on-error: true
      - name: pt-br_test
        if: "github.event.inputs.deployment_target == 'pt-br_test'"
        run: pytest --language=pt-br --alluredir="allure-results"
        continue-on-error: true
      - name: ro_test
        if: "github.event.inputs.deployment_target == 'ro_test'"
        run: pytest --language=ro --alluredir="allure-results"
        continue-on-error: true
      - name: ru_test
        if: "github.event.inputs.deployment_target == 'ru_test'"
        run: pytest --language=ru --alluredir="allure-results"
        continue-on-error: true
      - name: sk_test
        if: "github.event.inputs.deployment_target == 'sk_test'"
        run: pytest --language=sk --alluredir="allure-results"
        continue-on-error: true
      - name: uk_test
        if: "github.event.inputs.deployment_target == 'uk_test'"
        run: pytest --language=uk --alluredir="allure-results"
        continue-on-error: true
      - name: zh-cn_test
        if: "github.event.inputs.deployment_target == 'zh-cn_test'"
        run: pytest --language=zh-cn --alluredir="allure-results"
        continue-on-error: true
      - name: Store allure results
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path:
            allure-results
          retention-days: 7

  generate-report:
    runs-on: ubuntu-latest
    needs: test
    name: Generate report
    steps:
      - uses: actions/setup-java@v3
        with:
          distribution: 'microsoft'
          java-version: '17'
      - run: sudo wget https://github.com/allure-framework/allure2/releases/download/2.23.1/allure-2.23.1.tgz && sudo tar -zxvf allure-2.23.1.tgz -C /opt/ && sudo ln -s /opt/allure-2.23.1/bin/allure /usr/bin/allure
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3
      - run: allure generate -c allure-results -o _site
      - name: Store generated report
        uses: actions/upload-artifact@v3
        with:
          name: _site
          path:
            _site
          retention-days: 7

  publish-report:
    runs-on: ubuntu-latest
    needs: generate-report
    name: Publish report
    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v2
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1.2.9